syntax = "proto3";

package sidero.discovery.server;

option go_package = "github.com/siderolabs/discovery-api/api/v1alpha1/server/pb";

import "vendor/google/duration.proto";

service Cluster {
    // Hello is the first request sent by the client.
    //
    // Server might redirect the client to a different instance.
    rpc Hello(HelloRequest) returns (HelloResponse);
    // AffiliateUpdate updates (or creates) affiliate in the cluster.
    rpc AffiliateUpdate(AffiliateUpdateRequest) returns (AffiliateUpdateResponse);
    // AffiliateDelete deletes affiliate from the cluster.
    rpc AffiliateDelete(AffiliateDeleteRequest) returns (AffiliateDeleteResponse);
    // List affiliates in the cluster.
    rpc List(ListRequest) returns (ListResponse);
    // Watch affiliate updates in the cluster.
    //
    // The first WatchResponse contains the snapshot of the current affiliate state (even if empty).
    // Subsequent response messages are sent as the affiliates get changed.
    rpc Watch(WatchRequest) returns (stream WatchResponse);
}

// Common definitions.

message Affiliate {
    // Affiliate ID.
    string id = 1;
    // Affiliate data (encrypted).
    bytes data = 2;
    // Affiliate endpoints (encrypted)/
    repeated bytes endpoints = 3;
}

// Hello RPC

message HelloRequest {
    // ClusterID of the client.
    string cluster_id = 1;
    // Client version.
    string client_version = 2;
}

message RedirectMessage {
    // gRPC URL of the service endpoint to connect to.
    string endpoint = 1;
}

message HelloResponse {
    // If redirect is present, client should immediately reconnect to a different endpoint.
    optional RedirectMessage redirect = 1;
    // Client IP as seen by the server.
    bytes client_ip = 2;
}

// AffiliateUpdate RPC

message AffiliateUpdateRequest {
    // Client ClusterID.
    string cluster_id = 1;
    // Affiliate ID to update.
    string affiliate_id = 2;
    // Encrypted affiliate data.
    //
    // If missing, affiliate data is not updated.
    optional bytes affiliate_data = 3;
    // Encrypted list of affiliate endpoints.
    //
    // Endpoints are merged with the existing list of endpoints.
    repeated bytes affiliate_endpoints = 4;
    // TTL for the new data submitted.
    google.protobuf.Duration ttl = 5;
}

message AffiliateUpdateResponse {
}

// AffiliateDelete RPC

message AffiliateDeleteRequest {
    // Client ClusterID.
    string cluster_id = 1;
    // Affiliate ID to delete.
    string affiliate_id = 2;
}

message AffiliateDeleteResponse {
}

// List RPC

message ListRequest {
    // Client ClusterID.
    string cluster_id = 1;
}

message ListResponse {
    // List of cluster affiliates.
    repeated Affiliate affiliates = 1;
}

// Watch RPC

message WatchRequest {
    // Client ClusterID.
    string cluster_id = 1;
}

message WatchResponse {
    // List of cluster affiliates.
    repeated Affiliate affiliates = 1;
    // Flag that affiliate was deleted, only ID field is valid.
    bool deleted = 2;
}